generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserAdmin {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  indisponibilidades UserAdminAgenda[]
  agendamentos Agendamento[]
}

model UserAdminAgenda {
  id        String   @id @default(cuid())
  admin     UserAdmin @relation(fields: [adminId], references: [id])
  adminId   String
  data      DateTime  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([adminId, data]) // Cada admin pode marcar um dia como indispon√≠vel apenas uma vez
}

model UserClient {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dados     UserDataClient?
  agendamentos Agendamento[]
}

model UserDataClient {
  id        String   @id @default(cuid())
  user      UserClient @relation(fields: [userId], references: [id])
  userId    String @unique
  phone     String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Agendamento {
  id        String   @id @default(cuid())
  cliente   UserClient @relation(fields: [clienteId], references: [id])
  clienteId String
  admin     UserAdmin @relation(fields: [adminId], references: [id])
  adminId   String
  data      DateTime  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DiasBloqueados {
  id        String   @id @default(cuid())
  data      DateTime @unique
  motivo    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
